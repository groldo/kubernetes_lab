---
- name: setup master nodes
  hosts: all
  tasks:
    - name: Init Kubernetes cluster when cert does not exist
      register: init
      become: true
      shell: |
        kubeadm init --config /etc/kubernetes/init-config.yaml  \
                      --ignore-preflight-errors=Port-6443
      args:
        chdir: /etc/kubernetes/pki/
        creates: apiserver.crt
      delegate_to: main01
      run_once: true

    - name: get node-config to adjust for other nodes
      register: init
      become: true
      shell: |
        kubectl get --kubeconfig /etc/kubernetes/admin.conf \
          cm -n kube-system kubeadm-config \
          -o=jsonpath="{.data.ClusterConfiguration}" > /etc/kubernetes/node-config.yaml
      args:
        chdir: /etc/kubernetes/
        creates: node-config.yaml
      delegate_to: main01
      run_once: true

    - name: find kubernetes config files
      become: true
      register: files
      find:
        paths:
          - /etc/kubernetes/pki/etcd
          - /etc/kubernetes/pki
          - /etc/kubernetes/
        patterns:
          - "node-config.yaml"
          - "admin.conf"
          - "ca.*"
          - "front-proxy-ca.*"
          - "sa.*"
        recurse: true
      run_once: true
      delegate_to: main01

    - name: archive config
      become: true
      archive:
        path: "{{ files.files  | map(attribute='path') | unique  }}"
        dest: "/etc/kubernetes/k8s_config.tgz"
      run_once: true
      delegate_to: main01

    - name: fetch archive from master one
      fetch:
        src: /etc/kubernetes/k8s_config.tgz
        dest: "{{ playbook_dir }}/"
        flat: true
      run_once: true
      delegate_to: main01
    
    - name: copy archive to nodes
      become: true
      unarchive:
        src: k8s_config.tgz
        dest: "/etc/kubernetes/"
      when: "'masternodes' in group_names"
      
    - name: get join command
      become: true
      shell: |
        kubeadm token create --print-join-command
      register: join
      delegate_to: main01
      run_once: true

    - name: Join master nodes
      register: init
      become: true
      shell: "{{ join.stdout }} --control-plane --ignore-preflight-errors=Port-6443"
      args:
        chdir: /etc/kubernetes/
        creates: kubelet.conf
      when: "'masternodes' in group_names"

    - name: Join worker nodes
      register: init
      become: true
      shell: "{{ join.stdout }}"
      args:
        chdir: /etc/kubernetes/
        creates: kubelet.conf
      when: "'workernodes' in group_names"

    - name: replace bind-address for main nodes
      become: true
      lineinfile:
        path: /etc/kubernetes/node-config.yaml
        regexp: "    bind-address: 192.168.60.11"
        line: "    bind-address: {{ ipv4address }}"
      when: "'masternodes' in group_names"

    - name: replace bind-address for main nodes
      become: true
      command: kubeadm init phase control-plane apiserver --config /etc/kubernetes/node-config.yaml
      when: "'masternodes' in group_names"

    - name: output worker
      debug:
        msg: |
         To join further worker run the following command when ssh'd into the worker

          sudo {{ join.stdout }}
      run_once: true

    - name: output server
      debug:
        msg: |
         To join further worker run the following command when ssh'd into the worker

          sudo {{ join.stdout }} --control-plane --ignore-preflight-errors=Port-6443"
      run_once: true
