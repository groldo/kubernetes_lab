---    
- name: create openssl privatekey for ca
  become: true
  community.crypto.openssl_privatekey:
    path: "{{ all_registry__project_dir }}/certs/ca.key"

- name: create csr for ca
  become: true
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ all_registry__project_dir }}/certs/ca.key"
    common_name: ANSIBLE CA
    basic_constraints:
      - 'CA:TRUE'
    basic_constraints_critical: true
    key_usage:
      - keyCertSign
    key_usage_critical: true
  register: ca_csr

- name: create cert for ca
  become: true
  community.crypto.x509_certificate:
    path: "{{ all_registry__project_dir }}/certs/ca.crt"
    csr_content: "{{ ca_csr.csr }}"
    privatekey_path: "{{ all_registry__project_dir }}/certs/ca.key"
    provider: selfsigned

- name: create openssl privatekey for registry
  become: true
  run_once: true
  community.crypto.openssl_privatekey:
    path: "{{ all_registry__project_dir }}/certs/registry.key"

- name: create csr for registry
  become: true
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ all_registry__project_dir }}/certs/registry.key"
    subject_alt_name:
      - "DNS:{{ all_registry__domain }}"
      - "IP:{{ hostvars[inventory_hostname].ansible_eth1.ipv4.address }}"
  run_once: true
  register: csr

- name: create cert for registry
  become: true
  community.crypto.x509_certificate:
    path: "{{ all_registry__project_dir }}/certs/registry.crt"
    csr_content: "{{ csr.csr }}"
    provider: ownca
    ownca_path: "{{ all_registry__project_dir }}/certs/ca.crt"
    ownca_privatekey_path: "{{ all_registry__project_dir }}/certs/ca.key"
    ownca_not_after: +356d
    ownca_not_before: "-1d"
  run_once: true
  register: cert
